# -*- coding: utf-8 -*-
"""Flask.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nbylORe4vXLKhWx90aZkxUbK1DM-Fjrp
"""

pip install flask-ngrok

from google.colab import drive
drive.mount('/content/drive')

cd /content/drive/MyDrive/Flask-Google\ Colab

cd Flask

from __future__ import division, print_function
import sys
import os
import glob
import numpy as np
from tensorflow.keras.preprocessing import image
from tensorflow.keras.applications.imagenet_utils import preprocess_input, decode_predictions
from tensorflow.keras.models import load_model
from tensorflow.keras import backend
import tensorflow as tf
from resizeimage import resizeimage
from skimage.transform import resize
from PIL import Image
# Flask utils
from flask import Flask, redirect, url_for, request, render_template
from werkzeug.utils import secure_filename
from gevent.pywsgi import WSGIServer

from flask_ngrok import run_with_ngrok
# Define a flask app
app = Flask(__name__)
run_with_ngrok(app) 
# Load your trained model
model = load_model("/content/drive/MyDrive/Flask-Google Colab/Flask/pneumonia.h5")

UPLOAD_FOLDER='/content/drive/MyDrive/Flask-Google Colab/Flask/uploads'
app.config['UPLOAD_FOLDER']=UPLOAD_FOLDER

@app.route('/', methods=['GET'])
def index():
    # Main page
    return render_template('base.html')

@app.route('/predict', methods=['GET', 'POST'])
def upload():
    if request.method == 'POST':
        # Get the file from post request
        file = request.files['image']
        # Save the file to ./uploads
        name=file.filename
        file.save(os.path.join(app.config['UPLOAD_FOLDER'], name))
        image_file = Image.open("/content/drive/MyDrive/Flask-Google Colab/Flask/uploads/{}".format(name))
        #image_file = image_file.convert('3')
        image_file.save('uploads/{}'.format(name))

        with open('uploads/{}'.format(name), 'r+b') as f:
            with Image.open(f) as image:
                cover = resizeimage.resize_cover(image, [150, 150])
                cover.save('uploads/{}'.format(name), image.format)

        img = Image.open('uploads/{}'.format(name))
        array = np.array(img)
        array=np.expand_dims(array,axis=0)
        pred = np.argmax(model.predict(array),axis=1)
        '''x = image.img_to_array(img)
        x = np.expand_dims(x, axis=0)
        preds = np.argmax(model.predict(x))'''
        if pred[[0]]==0:
            text = "You are perfectly fine"
        else:
            text = "You are infected! Please Consult Doctor"
        text = text
            # ImageNet Decode
        return text

if __name__ == '__main__':
    app.run()

pip install python-resize-image

